model:
  onnx_path: /home/debangshu/adaptive-raven/raven/src/nets/mnistconvSmallRELUDiffAI.onnx
data:
  dataset: MNIST_ERAN  # Dataset name. This is just the standard CIFAR-10 test set defined in the "load_verification_dataset()" function in utils.py

specification:
  norm: .inf  # Linf norm (can also be 2 or 1).
  epsilon: 0.13
  # Increase for a stronger attack.
solver:
  batch_size: 64  # Number of subdomains to compute in parallel in bound solver. Increase if you run out of memory.
  alpha-crown:
    iteration: 100   # Number of iterations for alpha-CROWN optimization. Alpha-CROWN is used to compute all intermediate layer bounds before branch and bound starts.
    lr_alpha: 0.1    # Learning rate for alpha in alpha-CROWN. The default (0.1) is typically ok.
  beta-crown:
    lr_alpha: 0.01  # Learning rate for optimizing the alpha parameters, the default (0.01) is typically ok, but you can try to tune this parameter to get better lower bound.
    lr_beta: 0.05  # Learning rate for optimizing the beta parameters, the default (0.05) is typically ok, but you can try to tune this parameter to get better lower bound.
    iteration: 20  # Number of iterations for beta-CROWN optimization. 20 is often sufficient, 50 or 100 can also be used.
bab:
  timeout: 60  # Timeout threshold for branch and bound. Increase for verifying more points.
  pruning_in_iteration: False
  branching:  # Parameters for branching heuristics.
    reduceop: min  # Reduction function for the branching heuristic scores, min or max. Using max can be better on some models.
    method: babsr  # babsr is fast but less accurate; fsb is slow but most accurate; kfsb is usualy a balance.
    candidates: 3 
  cut:
    enabled: False
    cplex_cuts: False
    bab_cut: False
